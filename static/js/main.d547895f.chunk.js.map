{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/VideoUploadPage/VideoUploadPage.js","components/views/VideoDetailPage/Sections/SideVideo.js","components/views/VideoDetailPage/Sections/Subscriber.js","components/views/VideoDetailPage/Sections/LikeDislikes.js","components/views/VideoDetailPage/Sections/SingleComment.js","components/views/VideoDetailPage/Sections/ReplyComment.js","components/views/VideoDetailPage/Sections/Comment.js","components/views/VideoDetailPage/VideoDetailPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","Title","Typography","Meta","Card","LandingPage","useState","Videos","setVideos","Axios","success","console","log","videos","alert","renderCards","map","video","index","minutes","Math","floor","duration","seconds","key","lg","md","xs","style","position","href","_id","width","alt","src","thumbnail","className","bottom","right","margin","color","backgroundColor","opacity","padding","borderRadius","letterSpacing","fontSize","fontWeight","lineHeight","avatar","writer","image","title","name","marginLeft","views","moment","createdAt","format","level","gutter","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","Item","prefix","placeholder","value","onChange","onBlur","border","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","unix","registerUser","errmsg","label","hasFeedback","validateStatus","onClick","Menu","SubMenu","ItemGroup","LeftMenu","mode","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","background","borderBottom","overflow","boxShadow","height","display","flexDirection","alignItems","justifyContent","TextArea","Input","PrivateOptions","categoryOptions","VideoUploadPage","videoTitle","setVideoTitle","Description","setDescription","Private","setPrivate","category","setCategory","FilePath","setFilePath","Duration","setDuration","ThumbnailPath","setThumbnailPath","event","preventDefault","variables","description","privacy","filePath","message","maxWidth","textAlign","marginBottom","onDrop","files","formData","FormData","append","header","variable","url","fileName","fileDuration","multiple","maxSize","getRootProps","getInputProps","paddingLeft","paddingTop","e","currentTarget","item","size","SideVideo","sideVideos","setSideVideos","renderSideVideo","marginRight","Fragment","marginTop","Subscriber","userTo","userFrom","SubscribeNumber","setSubscribeNumber","Subscribed","setSubscribed","subscribeNumberVariables","subscribeNumber","subcribed","subscribeVariables","textTransform","LikeDislikes","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DisLikeAction","setDisLikeAction","videoId","commentId","likes","length","like","dislikes","dislike","theme","cursor","SingleComment","OpenReply","setOpenReply","CommentValue","setCommentValue","actions","uerId","comment","content","postId","responseTo","result","refreshFunction","author","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","openReplyComments","setOpenReplyComments","commentNumber","Comments","Comment","commentValue","VideoDetailPage","match","params","VideoDetail","setVideoDetail","setComments","comments","SubscribeButton","token","cs","controls","newComment","concat","App","fallback","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d547895f.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { FaCode } from \"react-icons/fa\";\nimport { Card, Avatar, Col, Typography, Row } from \"antd\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nconst { Title } = Typography;\nconst { Meta } = Card;\n\nfunction LandingPage() {\n  const [Videos, setVideos] = useState([]);\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    Axios.get(\"/api/video/getvideos\").then((response) => {\n      if (response.data.success) {\n        console.log(response.data);\n        setVideos(response.data.videos);\n      } else {\n        alert(\"비디오 가저오기를 실패했습니다.\");\n      }\n    });\n  }, []);\n\n  const renderCards = Videos.map((video, index) => {\n    // console.log(video);\n    var minutes = Math.floor(video.duration / 60);\n    var seconds = Math.floor(video.duration - minutes * 60);\n\n    return (\n      <Col key={index} lg={4} md={8} xs={24}>\n        <div style={{ position: \"relative\" }}>\n          <a href={`/video/${video._id}`}>\n            <img\n              style={{ width: \"100%\" }}\n              alt=\"thumbnail\"\n              src={`http://localhost:5888/${video.thumbnail}`}\n            />\n            <div\n              className=\" duration\"\n              style={{\n                bottom: 0,\n                right: 0,\n                position: \"absolute\",\n                margin: \"4px\",\n                color: \"#fff\",\n                backgroundColor: \"rgba(17, 17, 17, 0.8)\",\n                opacity: 0.8,\n                padding: \"2px 4px\",\n                borderRadius: \"2px\",\n                letterSpacing: \"0.5px\",\n                fontSize: \"12px\",\n                fontWeight: \"500\",\n                lineHeight: \"12px\",\n              }}\n            >\n              <span>\n                {minutes} : {seconds}\n              </span>\n            </div>\n          </a>\n        </div>\n        <br />\n        <Meta\n          avatar={<Avatar src={video.writer.image} />}\n          title={video.title}\n        />\n        <span>{video.writer.name} </span>\n        <br />\n        <span style={{ marginLeft: \"3rem\" }}> {video.views}</span>\n        <span> {moment(video.createdAt).format(\"MMM Do YY\")} </span>\n      </Col>\n    );\n  });\n\n  return (\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\n      <Title level={2}> 유튜브 리스트 </Title>\n      <hr />\n      <Row gutter={16}>{renderCards}</Row>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      {/* <Menu.Item key=\"mail\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n      <SubMenu title={<span>Blogs</span>}>\n        <MenuItemGroup title=\"Item 1\">\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        </MenuItemGroup>\n      </SubMenu> */}\n    </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Menu } from \"antd\";\nimport Axios from \"axios\";\nimport { USER_SERVER } from \"../../../Config\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n    const user = useSelector((state) => state.user);\n\n    const logoutHandler = () => {\n        Axios.get(`${USER_SERVER}/logout`).then((response) => {\n            if (response.status === 200) {\n                props.history.push(\"/login\");\n            } else {\n                alert(\"Log Out Failed\");\n            }\n        });\n    };\n\n    if (user.userData && !user.userData.isAuth) {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"mail\">\n                    <a href=\"/login\">로그인</a>\n                </Menu.Item>\n                <Menu.Item key=\"app\">\n                    <a href=\"/register\">회원가입</a>\n                </Menu.Item>\n            </Menu>\n        );\n    } else {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"upload\">\n                    <a href=\"/video/upload\">video</a>\n                </Menu.Item>\n                <Menu.Item key=\"logout\">\n                    <a onClick={logoutHandler}>로그아웃</a>\n                </Menu.Item>\n            </Menu>\n        );\n    }\n}\n\nexport default withRouter(RightMenu);\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">YouTube</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={true}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport { Icon } from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            background: \"white\",\n            padding: \"0 20px\", borderBottom: \"solid 1px #e8e8e8\",\n            overflow: \"auto\",\n            boxShadow: \"0 0 30px #f3f1f1\",\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize: '1rem'\n        }}>\n            <p> YouTube coding   <Icon type=\"smile\" /></p>\n            <div>\n                <a href=\"https://github.com/kongs510/youtubeClone\">github Link</a>\n            </div>\n        </div >\n    )\n}\n\nexport default Footer\n","import React, { useState } from \"react\";\nimport { Typography, Button, Form, message, Input, Icon } from \"antd\";\nimport Dropzone from \"react-dropzone\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nconst PrivateOptions = [\n  { value: 0, label: \"Private\" },\n  { value: 1, label: \"public\" },\n];\nconst categoryOptions = [\n  { value: 0, label: \"Film & Animation\" },\n  { value: 1, label: \"Autos & Vehicles\" },\n  { value: 2, label: \"music\" },\n  { value: 3, label: \"Pets & Animals\" },\n  { value: 4, label: \"sports\" },\n];\n\nfunction VideoUploadPage(props) {\n  const user = useSelector((state) => state.user); //state 가서 user의 정보를 가져와서 user의 담겨진다.\n  const [videoTitle, setVideoTitle] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [Private, setPrivate] = useState(0);\n  const [category, setCategory] = useState(\"File & Animation\");\n  const [FilePath, setFilePath] = useState(\"\");\n  const [Duration, setDuration] = useState(\"\");\n  const [ThumbnailPath, setThumbnailPath] = useState(\"\");\n\n  const onTitleChange = (e) => {\n    setVideoTitle(e.currentTarget.value);\n  };\n  const onDescription = (e) => {\n    setDescription(e.currentTarget.value);\n  };\n  const onPrivateChange = (e) => {\n    setPrivate(e.currentTarget.value);\n  };\n  const onCategoryChange = (e) => {\n    setCategory(e.currentTarget.value);\n  };\n  const onDrop = (files) => {\n    let formData = new FormData();\n\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    formData.append(\"file\", files[0]);\n\n    Axios.post(\"/api/video/uploadfiles\", formData, config).then((response) => {\n      if (response.data.success) {\n        let variable = {\n          url: response.data.url,\n          fileName: response.data.fileName,\n        };\n        console.log(response.data.filePath);\n        setFilePath(response.data.filePath);\n\n        Axios.post(\"/api/video/thumbnail\", variable).then((response) => {\n          if (response.data.success) {\n            setDuration(response.data.fileDuration);\n            setThumbnailPath(response.data.url);\n            console.log(\"썸내일 생성 성공\" + response.data.url);\n          } else {\n            alert(\"썸내일 생성에 실패했습니다.\");\n          }\n        });\n      } else {\n        alert(\"비디오 업로드를 실패했습니다.\");\n      }\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    // 하려던것을 방지 이 이후부터 우리가 하는것을 코딩하면 동작함\n\n    const variables = {\n      //리덕스를 통해 가져온다 (리덕스 훅)\n      writer: user.userData._id,\n      title: videoTitle,\n      description: Description,\n      privacy: Private,\n      filePath: FilePath,\n      category: category,\n      duration: Duration,\n      thumbnail: ThumbnailPath,\n    };\n\n    //라우터 만들어야한다. /api/video/uploadVideo\n    Axios.post(\"/api/video/uploadVideo\", variables) //variables 들을 request 보내면 response를 받는다.\n      .then((response) => {\n        if (response.data.success) {\n          message.success(\"성공적으로 업로드 했습니다.\");\n\n          setTimeout(() => {\n            props.history.push(\"/\");\n          }, 1000);\n        } else {\n          alert(\"비디오 업로드에 실패했습니다.\");\n        }\n      });\n  };\n\n  return (\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\n        <div>\n          <Title level={2}>upload video</Title>\n        </div>\n      </div>\n\n      <Form onSubmit={onSubmit}>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          {/* 드랍존 */}\n          <Dropzone onDrop={onDrop} multiple={false} maxSize={100000000000}>\n            {({ getRootProps, getInputProps }) => (\n              <div\n                style={{\n                  width: \"300px\",\n                  height: \"240px\",\n                  border: \"1px solid lightgray\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n                <Icon\n                  type=\"plus\"\n                  style={{\n                    fontSize: \"3rem\",\n                    paddingLeft: \"8rem\",\n                    paddingTop: \"6rem\",\n                  }}\n                />\n              </div>\n            )}\n          </Dropzone>\n\n          {/* 썸네일 */}\n          {ThumbnailPath && (\n            <div>\n              <img\n                src={`http://localhost:5888/${ThumbnailPath}`}\n                alt=\"Thumbnail\"\n              />\n            </div>\n          )}\n        </div>\n        <br />\n        <br />\n        <label>Title</label>\n        <Input onChange={onTitleChange} value={videoTitle} />\n        <br />\n        <br />\n        <label>Description</label>\n        <TextArea onChange={onDescription} value={Description} />\n        <br />\n        <br />\n        <select onChange={onPrivateChange}>\n          {PrivateOptions.map((item, index) => (\n            <option key={index} value={item.value}>\n              {item.label}\n            </option>\n          ))}\n        </select>\n        <br />\n        <br />\n        <select onChange={onCategoryChange}>\n          {categoryOptions.map((item, index) => (\n            <option key={index} value={item.value}>\n              {item.label}\n            </option>\n          ))}\n        </select>\n        <br />\n        <br />\n        <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n          submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default VideoUploadPage;\n","import Axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nfunction SideVideo() {\n  const [sideVideos, setSideVideos] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"/api/video/getvideos\").then((response) => {\n      if (response.data.success) {\n        setSideVideos(response.data.videos);\n      } else {\n        alert(\"비디오 가저오기를 실패했습니다.\");\n      }\n    });\n  }, []);\n\n  const renderSideVideo = sideVideos.map((video, index) => {\n    var minutes = Math.floor(video.duration / 60);\n    var seconds = Math.floor(video.duration - minutes * 60);\n    return (\n      <div\n        key={index}\n        style={{ display: \"flex\", marginBottom: \"1rem\", padding: \"0 2rem\" }}\n      >\n        <div style={{ width: \"40%\", marginRight: \"1rem\" }}>\n          <a href={`/video/${video._id}`} style={{ color: \"gray\" }}>\n            <img\n              style={{ width: \"100%\" }}\n              alt=\"thumbnail\"\n              src={`http://localhost:5888/${video.thumbnail}`}\n            />\n          </a>\n        </div>\n        <div style={{ width: \"50%\" }}>\n          <a href={`/video/${video._id}`} style={{ color: \"gray\" }}>\n            <span style={{ fontSize: \"1rem\", color: \"black\" }}>\n              {video.title}\n            </span>\n            <br />\n            <span>{video.writer.name}</span>\n            <br />\n            <span>{video.views} views</span>\n            <br />\n            <span>\n              {minutes} : {seconds}\n            </span>\n            <br />\n          </a>\n        </div>\n      </div>\n    );\n  });\n  return (\n    <React.Fragment>\n      <div style={{ marginTop: \"3rem\" }}>{renderSideVideo}</div>\n    </React.Fragment>\n  );\n}\n\nexport default SideVideo;\n","import Axios from \"axios\";\n\nimport React, { useEffect, useState } from \"react\";\n\nfunction Subscriber(props) {\n  const userTo = props.userTo;\n  const userFrom = props.userFrom;\n\n  const [SubscribeNumber, setSubscribeNumber] = useState(0);\n  const [Subscribed, setSubscribed] = useState(false);\n\n  const onSubscribe = () => {\n    let subscribeVariables = {\n      userTo: props.userTo,\n      userFrom: props.userFrom,\n    };\n    console.log(Subscribed);\n    console.log(subscribeVariables);\n    if (Subscribed) {\n      //구독중일때\n      Axios.post(\"/api/subscribe/unSubscribe\", subscribeVariables).then(\n        (response) => {\n          if (response.data.success) {\n            console.log(response.data.success + \"1\");\n            setSubscribeNumber(SubscribeNumber - 1);\n            setSubscribed(!Subscribed);\n          } else {\n            alert(\"Failed to unsubscribe\");\n          }\n        }\n      );\n    } else {\n      // 아직 구독중이 아닐때\n      Axios.post(\"/api/subscribe/subscribe\", subscribeVariables).then(\n        (response) => {\n          if (response.data.success) {\n            console.log(response.data.success + \"2\");\n            setSubscribeNumber(SubscribeNumber + 1);\n            setSubscribed(!Subscribed);\n          } else {\n            alert(\"Failed to subscribe\");\n          }\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    const subscribeNumberVariables = { userTo: userTo, userFrom: userFrom };\n    Axios.post(\"/api/subscribe/subscribeNumber\", subscribeNumberVariables).then(\n      (response) => {\n        if (response.data.success) {\n          setSubscribeNumber(response.data.subscribeNumber);\n        } else {\n          alert(\"구독자수 가져오기를 실패합니다.\");\n        }\n      }\n    );\n    Axios.post(\"/api/subscribe/subscribed\", subscribeNumberVariables).then(\n      (response) => {\n        if (response.data.success) {\n          setSubscribed(response.data.subcribed);\n        } else {\n          alert(\"구독자 정보를 얻는데 실패했습니다.\");\n        }\n      }\n    );\n  }, []);\n  return (\n    <div>\n      <button\n        onClick={onSubscribe}\n        style={{\n          backgroundColor: `${Subscribed ? \"#AAAAAA\" : \"#CC0000\"}`,\n          borderRadius: \"4px\",\n          color: \"white\",\n          padding: \"10px 16px\",\n          fontWeight: \"500\",\n          fontSize: \"1rem\",\n          textTransform: \"uppercase\",\n        }}\n      >\n        {SubscribeNumber} {Subscribed ? \"Subscribed\" : \"Subscribe\"}\n      </button>\n    </div>\n  );\n}\n\nexport default Subscriber;\n","import React, { useState } from 'react'\nimport { Tooltip, Icon } from 'antd';\nimport { useEffect } from 'react';\nimport Axios from 'axios';\n\nfunction LikeDislikes(props) {\n    const [Likes, setLikes] = useState(0)\n    const [Dislikes, setDislikes] = useState(0)\n    const [LikeAction, setLikeAction] = useState(null)\n    const [DisLikeAction, setDisLikeAction] = useState(null)\n\n    let variable = {}\n    if (props.video) {\n        variable = { videoId: props.videoId, userId: props.userId }\n    } else {\n        variable = { commentId: props.commentId, userId: props.userId }\n    }\n\n    useEffect(() => {\n        Axios.post(\"/api/like/getLikes\", variable)\n            .then(response => {\n                if (response.data.success) {\n                    //좋아요를 누른갯수\n                    setLikes(response.data.likes.length)\n                    //내가 눌렀는지 확인\n                    response.data.likes.map(like => {\n                        if (like.userId === props.userId) {\n                            setLikeAction('liked')\n                        }\n                    })\n                } else {\n                    alert(\"좋아요를 가져오지 못했습니다.\")\n                }\n            })\n\n        Axios.post(\"/api/like/getDislikes\", variable)\n            .then(response => {\n                if (response.data.success) {\n                    //싫어요를 누른갯수\n                    setDislikes(response.data.dislikes.length)\n                    //내가 눌렀는지 확인\n                    response.data.dislikes.map(dislike => {\n                        if (dislike.userId === props.userId) {\n                            setDisLikeAction('disliked')\n                        }\n                    })\n                } else {\n                    alert(\"싫어요를 가져오지 못했습니다.\")\n                }\n            })\n    }, [])\n\n    const onLike = () => {\n\n        if (LikeAction === null) {\n            Axios.post(\"/api/like/upLike\", variable)\n                .then(response => {\n                    if (response.data.success) {\n\n                        setLikes(Likes + 1)\n                        setLikeAction(\"Liked\")\n\n                        if (DisLikeAction !== null) {\n                            setDisLikeAction(null)\n                            setDislikes(Dislikes - 1)\n                        }\n                    } else {\n                        alert(\"좋아요를 올리지 못하였습니다.\")\n                    }\n                })\n        } else {\n            Axios.post(\"/api/like/unLike\", variable).then(response => {\n                if (response.data.success) {\n                    setLikes(Likes - 1)\n                    setLikeAction(null)\n                } else {\n                    alert(\"좋아요를 내리지 못하였습니다.\")\n                }\n            })\n        }\n    }\n\n    const onDisLike = () => {\n\n        if (DisLikeAction !== null) {\n\n            Axios.post(\"/api/like/unDisLike\", variable)\n                .then(response => {\n                    if (response.data.success) {\n\n                        setDislikes(Dislikes - 1)\n                        setDisLikeAction(null)\n\n                    } else {\n                        alert(\"싫어요를 올리지 못하였습니다.\")\n                    }\n                })\n\n        } else {\n\n            Axios.post(\"/api/like/upDisLike\", variable)\n                .then(response => {\n                    if (response.data.success) {\n                        setDislikes(Dislikes + 1)\n                        setDisLikeAction('disliked')\n\n                        //If dislike button is already clicked\n                        if (LikeAction !== null) {\n                            setLikeAction(null)\n                            setLikes(Likes - 1)\n                        }\n                    } else {\n                        alert(\"싫어요를 내리지 못하였습니다.\")\n                    }\n                })\n        }\n    }\n\n\n    return (\n        <React.Fragment>\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    <Icon type=\"like\"\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\n                        onClick={onLike}\n                    />\n                </Tooltip>\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Likes}</span>\n            </span>&nbsp;&nbsp;\n            <span key=\"comment-basic-dislike\">\n                <Tooltip title=\"Dislike\">\n                    <Icon\n                        type=\"dislike\"\n                        theme={DisLikeAction === 'disliked' ? 'filled' : 'outlined'}\n                        onClick={onDisLike}\n                    />\n                </Tooltip>\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Dislikes}</span>\n            </span>\n        </React.Fragment>\n    )\n}\n\nexport default LikeDislikes\n","import React from \"react\";\nimport { Comment, Avatar, Button, Input } from \"antd\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport LikeDislikes from \"./LikeDislikes\";\n\nfunction SingleComment(props) {\n  const user = useSelector((state) => state.user);\n  const [OpenReply, setOpenReply] = useState(false);\n  const [CommentValue, setCommentValue] = useState(\"\");\n\n  const onClickReplyOpen = () => {\n    setOpenReply(!OpenReply);\n  };\n  const onHandleChange = (e) => {\n    setCommentValue(e.currentTarget.value);\n    console.log(e.currentTarget.value)\n  };\n\n  const actions = [\n    <>\n      <LikeDislikes uerId={localStorage.getItem(\"userId\")} commentId={props.comment._id} />\n      <span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\">\n        Reply to\n      </span>,\n    </>\n  ];\n\n  const onSubmit = (e) => {\n\n    e.preventDefault();\n\n    //댓글의 대한 유저정보와 댓글의 대한 내용 필요\n    const variables = {\n      content: CommentValue,\n      writer: user.userData._id,\n      //기존에는 localStorage에서 가져왔는데 이번에는 리덕스 에서 가져오는것으로!\n      postId: props.postId,\n      responseTo: props.comment._id,\n    };\n\n    Axios.post(\"/api/comment/saveComment\", variables).then((response) => {\n      if (response.data.success) {\n        console.log(response.data.result);\n        setCommentValue(\"\");\n        setOpenReply(false)\n        props.refreshFunction(response.data.result);\n      } else {\n        alert(\"코멘트를 저장하지 못했습니다.\");\n      }\n    });\n  };\n  return (\n    <div>\n      <Comment\n        actions={actions}\n        author={props.comment.writer.name}\n        avatar={<Avatar src={props.comment.writer.image} alt=\"image\" />}\n        content={<p>{props.comment.content}</p>}\n      />\n      {OpenReply && (\n        <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n          <textarea\n            style={{ width: \"100%\", borderRadius: \"5px\" }}\n            onChange={onHandleChange}\n            value={CommentValue}\n            placeholder=\"코멘트를 작성해주세요\"\n          />\n          <br />\n          <button style={{ width: \"20%\", height: \"52px\" }} onClick={onSubmit}>\n            Submit\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default SingleComment;\n","import React, { useEffect, useState } from 'react'\nimport SingleComment from './SingleComment'\n\nfunction ReplyComment(props) {\n\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\n    const [openReplyComments, setOpenReplyComments] = useState(false)\n\n    useEffect(() => {\n        let commentNumber = 0;\n        props.Comments.map((comment) => {\n            if (comment.responseTo === props.parentCommentId) {\n                commentNumber++\n            }\n        })\n        setChildCommentNumber(commentNumber)\n    }, [props.Comments])\n\n    let renderReplyComment = (parentCommentId) =>\n        props.Comments.map((comment, index) => (\n            <React.Fragment>\n                {comment.responseTo === parentCommentId &&\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\n                        < SingleComment key={index}\n                            refreshFunction={props.refreshFunction}\n                            comment={comment}\n                            postId={props.postId} />\n                        <ReplyComment Comments={props.Comments} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\n                    </div>\n                }\n            </React.Fragment>\n        ))\n\n    const onHandleChange = () => {\n        setOpenReplyComments(!openReplyComments)\n\n    }\n\n    return (\n        <div>\n            {ChildCommentNumber > 0 &&\n                <p style={{ fontSize: \"14px\", margin: 0, color: \"gray\" }} onClick={onHandleChange}>\n                    view {ChildCommentNumber} more comment(s)\n                </p>}\n            {openReplyComments &&\n                renderReplyComment(props.parentCommentId)}\n\n            vvvvvvvvv\n        </div>\n    )\n}\n\nexport default ReplyComment\n","import Axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ReplyComment from \"./ReplyComment\";\nimport SingleComment from \"./SingleComment\";\nfunction Comment(props) {\n  //Url에서 가져온다!\n  const user = useSelector(state => state.user);\n  const [commentValue, setCommentValue] = useState(\"\");\n  const handleClick = (e) => {\n    setCommentValue(e.currentTarget.value);\n    //타이핑한 글자가 입력되게 이벤트 객체를 이용\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //리플레쉬 방지\n\n    const variables = {\n      content: commentValue,\n      writer: user.userData._id,\n      //기존에는 localStorage에서 가져왔는데 이번에는 리덕스 에서 가져오는것으로!\n      postId: props.postId,\n    };\n    Axios.post(\"/api/comment/saveComment\", variables).then(response => {\n      if (response.data.success) {\n        setCommentValue(\"\");\n        props.refreshFunction(response.data.result);\n        console.log(response.data.result);\n      } else {\n        alert(\"코멘트를 저장하지 못했습니다.\");\n      }\n    });\n  };\n  return (\n    <div>\n      <br />\n      <p>Replies</p>\n      <hr />\n      {console.log(props.Comments)}\n      {props.Comments && props.Comments.map((comment, index) => !comment.responseTo && (\n        <>\n          <SingleComment\n            key={index}\n            refreshFunction={props.refreshFunction}\n            comment={comment}\n            postId={props.postId}\n          />\n          <ReplyComment key={comment._id} parentCommentId={comment._id} postId={props.postId} Comments={props.Comments} refreshFunction={props.refreshFunction} />\n        </>\n      )\n      )}\n\n      <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n        <textarea\n          style={{ width: \"100%\", borderRadius: \"5px\" }}\n          onChange={handleClick}\n          value={commentValue}\n          placeholder=\"코멘트를 작성해주세요\"\n        />\n        <br />\n        <button style={{ width: \"20%\", height: \"52px\" }} onClick={onSubmit}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Comment;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, List, Avatar } from \"antd\";\nimport Axios from \"axios\";\nimport SideVideo from \"./Sections/SideVideo\";\nimport Subscriber from \"./Sections/Subscriber\";\nimport Comment from \"./Sections/Comment\";\nimport LikeDislikes from \"./Sections/LikeDislikes\";\n\nfunction VideoDetailPage(props) {\n  const videoId = props.match.params.videoId;\n\n  const [VideoDetail, setVideoDetail] = useState([]);\n  const [Comments, setComments] = useState([]);\n  const variable = { videoId: videoId };\n\n  useEffect(() => {\n    Axios.post(\"/api/video/getVideoDetail\", variable).then((response) => {\n      if (response.data.success) {\n        console.log(response.data.VideoDetail);\n        setVideoDetail(response.data.VideoDetail);\n      } else {\n        alert(\"비디오 정보를 가져오길 실패했습니다.\");\n      }\n    });\n    Axios.post(\"/api/comment/getComments\", variable).then((response) => {\n      if (response.data.success) {\n        setComments(response.data.comments);\n        console.log(response.data.comments);\n      } else {\n        alert(\"코멘트 정보를 가져오지 못했습니다.  \");\n      }\n    });\n  }, []);\n  if (VideoDetail.writer) {\n    const SubscribeButton = VideoDetail.writer.token && (\n      <Subscriber\n        userTo={VideoDetail.writer._id}\n        userFrom={localStorage.getItem(\"userId\")}\n      />\n    );\n\n    const refreshFunction = (newComment) => {\n      setComments(Comments.concat(newComment));\n    };\n    return (\n      <Row gutter={[16, 16]}>\n        <Col lg={18} cs={24}>\n          <div style={{ width: \"100%\", padding: \"3rem 4rem\" }}>\n            {/* <video src={`http://localhost:5888/${VideoDetail.filePath}`} controls /> */}\n            <video\n              style={{ width: \"100%\" }}\n              src={`http://localhost:5888/${VideoDetail.filePath}`}\n              controls\n            ></video>\n            <List.Item actions={[<LikeDislikes video uerId={localStorage.getItem(\"userId\")} videoId={videoId} />, SubscribeButton]}>\n              <List.Item.Meta\n                avatar={<Avatar src={VideoDetail.writer.image} />}\n                title={VideoDetail.writer.name}\n                description={VideoDetail.description}\n              />\n            </List.Item>\n            <Comment\n              refreshFunction={refreshFunction}\n              Comments={Comments}\n              postId={videoId}\n            />\n          </div>\n        </Col>\n        <Col lg={6} xs={24}>\n          <SideVideo />\n        </Col>\n      </Row>\n    );\n  } else {\n    return <div>Loading...</div>;\n  }\n}\n\nexport default VideoDetailPage;\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport VideoUploadPage from \"./views/VideoUploadPage/VideoUploadPage\";\nimport VideoDetailPage from \"./views/VideoDetailPage/VideoDetailPage\"\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n    return (\n        <Suspense fallback={<div>Loading...</div>}>\n            <NavBar />\n            <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\n                <Switch>\n                    <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n                    <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n                    <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n                    <Route exact path=\"/video/upload\" component={Auth(VideoUploadPage, true)} />\n                    <Route exact path=\"/video/:videoId\" component={Auth(VideoDetailPage, null)} />\n                </Switch>\n            </div>\n            <Footer />\n        </Suspense>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}